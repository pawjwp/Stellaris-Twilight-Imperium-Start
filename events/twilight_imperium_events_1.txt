###################################
# Twilight Imperium Events
# Written by Pawjwp
###################################

namespace = twilight_imperium

# adds technologies to factions
# should happen after game_start.8
country_event = {
	id = twilight_imperium.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				ti_is_l1z1x = yes
			}
			give_technology = { message = no tech = tech_droid_workers }
			give_technology = { message = no tech = tech_integrated_cybernetics }
		}
		if = {
			limit = {
				ti_is_nomad = yes
			}
			give_technology = { message = no tech = tech_orbital_ring_tier_1 }
		}
		if = {
			limit = {
				ti_is_mentak = yes
				ti_is_nomad = yes
				ti_is_naaz_rokha = yes
			}
			give_technology = { message = no tech = tech_integrated_cybernetics }
			give_technology = { message = no tech = tech_frontier_health }
		}
		if = {
			limit = {
				ti_is_mahact = yes
			}
			give_technology = { message = no tech = tech_gene_tailoring }
		}
		if = {
			limit = {
				ti_is_creuss = yes
			}
			give_technology = { message = no tech = tech_hyper_drive_2 }
			give_technology = { message = no tech = tech_wormhole_stabilization }

			set_country_flag = encountered_first_wormhole
			add_seen_bypass_type = wormhole
		}
		if = {
			limit = {
				ti_is_muaat = yes
			}
			give_technology = { tech = tech_titans }
			give_technology = { message = no tech = tech_starbase_3 }
			add_research_option = tech_starbase_4
			add_resource = { alloys = 900 }
		}
		if = {
			limit = {
				ti_is_jol_nar = yes
			}
			give_technology = { message = no tech = tech_space_science_1 }
			give_technology = { message = no tech = tech_space_science_2 }
			give_technology = { message = no tech = tech_space_science_3 }
			give_technology = { message = no tech = tech_administrative_ai }
			give_technology = { message = no tech = tech_self_aware_logic }
		}
		if = {
			limit = {
				ti_is_naaz_rokha = yes
			}
			give_technology = { message = no tech = tech_fusion_power }
			give_technology = { message = no tech = tech_cold_fusion_power }
		}
		if = {
			limit = {
				ti_is_xxcha = yes
			}
			give_technology = { message = no tech = tech_shields_2 }
			give_technology = { message = no tech = tech_planetary_shield_generator }
			give_technology = { message = no tech = tech_ftl_inhibitor }
			add_research_option = tech_shields_3
		}
		if = {
			limit = {
				ti_is_yssaril = yes
			}
			give_technology = { message = no tech = tech_cloaking_1 }
			give_technology = { message = no tech = tech_sensors_2 }
			add_research_option = tech_shields_2
		}
		if = {
			limit = {
				ti_is_naalu = yes
			}
			give_technology = { message = no tech = tech_strike_craft_1 }
		}
		if = {
			limit = {
				ti_is_letnev = yes
			}
			give_technology = { message = no tech = tech_doctrine_navy_size_1 }
			give_technology = { message = no tech = tech_doctrine_fleet_size_1 }
		}
		if = {
			limit = {
				ti_is_saar = yes
			}
			give_technology = { message = no tech = tech_starbase_3 }
			give_technology = { message = no tech = tech_modular_engineering }
		}
		if = {
			limit = {
				ti_is_sol = yes
			}
			give_technology = { message = no tech = tech_ground_defense_planning  }
			give_technology = { message = no tech = tech_combat_training }
		}
	}
}

# starting planet and pop effects
planet_event = {
	id = twilight_imperium.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# set species flags and event targets
		owner = { country_event = { id = twilight_imperium.20 } }

		# naaz-rokha change species characteristics
		if = {
			limit = {
				owner = {
					ti_is_naaz_rokha = yes
				}
			}
			event_target:rokha_species = {
				if = {
					limit = {
						has_trait = trait_syncretic_proles
					}
					change_species_characteristics = {
						remove_trait = trait_syncretic_proles
						add_trait = trait_traditional
						add_traits_at_start_of_list = yes
					}
				}
				if = {
					limit = {
						has_trait = trait_pc_tropical_preference
					}
					change_species_characteristics = {
						remove_trait = trait_pc_tropical_preference
						add_trait = trait_pc_continental_preference
						add_traits_at_start_of_list = yes
					}
				}
			}
		}

		# muaat set relic habitability and survivor
		if = {
			limit = {
				owner = {
					ti_is_muaat = yes
				}
			}
			owner_species = {
				if = {
					limit = {
						has_trait = trait_pc_desert_preference
					}
					change_species_characteristics = {
						remove_trait = trait_pc_desert_preference
						add_trait = trait_pc_relic_preference
						add_traits_at_start_of_list = yes
					}
				}
				if = {
					limit = {
						NOT = { has_trait = trait_survivor }
					}
					change_species_characteristics = {
						add_trait = trait_survivor
						add_traits_at_start_of_list = yes
					}
				}
			}
		}

		# sardakk set tomb habitability
		if = {
			limit = {
				owner = {
					ti_is_sardakk = yes
				}
			}
			owner_species = {
				if = {
					limit = {
						has_trait = trait_pc_desert_preference
					}
					change_species_characteristics = {
						remove_trait = trait_pc_desert_preference
						add_trait = trait_pc_nuked_preference
						add_traits_at_start_of_list = yes
					}
				}
			}
		}

		# mentak gene clinics and mining district
		if = {
			limit = {
				owner = {
					ti_is_mentak = yes
				}
			}
			
			remove_building = building_commercial_zone
			add_building = building_clinic

			add_district_and_planet_size_if_needed_effect = {
				district = district_mining
			}
		}

		# nomad gene clinics and generator district
		if = {
			limit = {
				owner = {
					ti_is_nomad = yes
				}
			}

			remove_building = building_bureaucratic_1
			add_building = building_clinic

			add_district_and_planet_size_if_needed_effect = {
				district = district_generator
			}
		}

		# jol-nar bonus research lab
		if = {
			limit = {
				owner = {
					ti_is_jol_nar = yes
				}
			}
			
			add_building = building_research_lab_1
		}

		# xxcha shield generator
		if = {
			limit = {
				owner = {
					ti_is_xxcha = yes
				}
			}
			
			add_building = building_planetary_shield_generator
		}
	}
}

# modify starting ships
# should happen after game_start.9
country_event = {
	id = twilight_imperium.3
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# muaat citadel and titan yards
		if = {
			limit = {
				ti_is_muaat = yes
			}
			random_owned_starbase = {
				set_starbase_size = starbase_citadel
				set_starbase_module = {
					slot = 1
					module = trading_hub
				}
				set_starbase_module = {
					slot = 2
					module = shipyard
				}
				set_starbase_module = {
					slot = 3
					module = shipyard
				}
				set_starbase_building = {
					slot = 2
					building = resource_silo
				}
				set_starbase_building = {
					slot = 3
					building = communications_jammer
				}
				set_starbase_building = {
					slot = 4
					building = titan_yards
				}
			}
		}
		
		# jol-nar bonus science ships
		if = {
			limit = {
				ti_is_jol_nar = yes
			}

			create_fleet = {
				effect = {
					set_owner = prev

					create_ship = {
						name = random
						random_existing_design = science
					}

					set_fleet_stance = evasive
					#set_location = prev.capital_star
					set_location = prev.capital_scope.star

					owner = {
						create_leader = {
							class = scientist
							sub_type = survey
							name = random
							species = owner_main_species
						}
					}
					last_created_leader = {
						if = {
							limit = {
								has_skill > 1
								num_traits = 0
							}
							add_trait_no_notify = random_common
						}
					}
					set_leader = last_created_leader
				}
			}
		}
	}
}

# should happen after game_start.1
event = {
	id = twilight_imperium.4
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# Diverse pops
		every_playable_country = {
			limit = {
				OR = {
					ti_is_mentak = yes
					ti_is_nomad = yes
				}
			}
			country_event = { id = twilight_imperium.6 }
		}

		# Slightly diverse pops
		every_playable_country = {
			limit = {
				OR = {
					ti_is_hacan = yes
					ti_is_sol = yes
					ti_is_xxcha = yes
				}
			}
			country_event = { id = twilight_imperium.7 }
		}

		# Empty barren worlds instead of starting habitables
		every_playable_country = {
			limit = {
				OR = {
					ti_is_hacan = yes
					ti_is_naalu = yes
					ti_is_sardakk = yes
				}
			}
			country_event = { id = twilight_imperium.10 }
		}

		# Empty barren worlds instead of one starting habitable
		every_playable_country = {
			limit = {
				OR = {
					ti_is_jol_nar = yes
					ti_is_xxcha = yes
					ti_is_yssaril = yes
					ti_is_argent_flight = yes
					ti_is_naaz_rokha = yes
				}
			}
			country_event = { id = twilight_imperium.12 }
		}

		random_country = {
			limit = {
				ti_is_letnev = yes
			}
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_star_flag = wren_terra }
						max_steps = 2
						create_starbase = {
							size = starbase_outpost
							owner = event_target:letnev_empire
						}
					}
				}
			}
		}

		random_country = {
			limit = {
				ti_is_creuss = yes
			}
			random_system = {
				limit = { has_star_flag = shaleri_passage }
				create_starbase = {
					size = starbase_outpost
					owner = event_target:creuss_empire
				}
			}
		}


		# multiple starting planets
		every_playable_country = {
			limit = {
				owner = {
					OR = {
						ti_is_hacan = yes
						ti_is_letnev = yes
						ti_is_naalu = yes
						ti_is_sardakk = yes
						ti_is_jol_nar = yes
						ti_is_xxcha = yes
						ti_is_yssaril = yes
						ti_is_argent_flight = yes
						ti_is_naaz_rokha = yes
					}
				}
			}
			capital_scope = { planet_event = { id = twilight_imperium.8 } }
		}

		# Remove delete me planet
		every_playable_country = {
			limit = {
				OR = {
					ti_is_argent_flight = yes
					ti_is_hacan = yes
				}
			}
			random_planet_within_border = {
				limit = {
					has_planet_flag = delete_me_planet
				}
				remove_planet = yes
			}
		}
	}
}

# country start
country_event = {
	id = twilight_imperium.5
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					ti_is_mentak = yes
					ti_is_nomad = yes
				}
			}
			
			while = {
				count = 3
				random_owned_leader = {
					limit = {
						is_ruler = no
					}
					kill_leader = {
						show_notification = no
					}
				}
			}

			random_owned_pop = {
				species = {
					save_event_target_as = researcher_species
				}
			}
			create_leader = {
				class = scientist
				name = random
				species = event_target:researcher_species
			}
			random_owned_fleet = {
				limit = {
					is_ship_class = shipclass_science_ship
					NOT = { exists = leader }
				}
				set_leader = last_created_leader
			}
			if = {
				limit = {
					any_owned_leader = {
						leader_class = scientist
						is_councilor = no
						is_ruler = no
					}
				}
				random_owned_leader = {
					limit = {
						leader_class = scientist
						is_councilor = no
						is_ruler = no
					}
					set_council_position = councilor_research
				}
			}
			
			random_owned_pop = {
				species = {
					save_event_target_as = defense_species
				}
			}
			create_leader = {
				class = commander
				name = random
				species = event_target:defense_species
			}
			random_owned_fleet = {
				limit = {
					is_ship_class = shipclass_military
					NOT = { exists = leader }
				}
				set_leader = last_created_leader
			}
			if = {
				limit = {
					any_owned_leader = {
						leader_class = commander
						is_councilor = no
						is_ruler = no
					}
				}
				random_owned_leader = {
					limit = {
						leader_class = commander
						is_councilor = no
						is_ruler = no
					}
					set_council_position = councilor_defense
				}
			}

			random_owned_pop = {
				species = {
					save_event_target_as = state_species
				}
			}
			create_leader = {
				class = official
				name = random
				species = event_target:state_species
				effect = {
					set_council_position = councilor_state
					root.capital_scope = {
						assign_leader = last_created_leader
					}
				}
			}
		}
		if = {
			limit = {
				OR = {
					ti_is_nomad = yes
				}
			}

			capital_scope = { spawn_orbital_ring_effect = yes }
		}
	}
}

# spawn random pops for diverse empires
country_event = {
	id = twilight_imperium.6
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		# Broken Shackles pops are aware of alien life
		set_country_flag = encountered_first_primitive
		set_country_flag = first_contact_event
		set_country_flag = first_alien_life
		set_country_flag = Story1
		set_country_flag = Story2 # Already encountered spacefarers
		set_country_flag = Story3
		set_country_flag = Story4
		set_country_flag = Story5
		set_country_flag = Story6
		set_country_flag = Story7
		set_country_flag = has_encountered_other_empire

		capital_scope = {
			solar_system = {
				set_star_flag = spawn_multicultural_pops
			}
			while = {
				limit = { num_pops < 30 }
				if = {
					limit = {
						any_country = {
							ti_valid_immigration_empire = yes
						}
					}
					random_country = {
						limit = {
							ti_valid_immigration_empire = yes
						}
						owner_species = { save_event_target_as = random_multicultural_species }
					}
					create_pop = {
						species = event_target:random_multicultural_species
						ethos = random
					}
				}
			}
			check_planet_employment = yes
		}

		# Safety pops in case there are literally no other primitives in the galaxy
		capital_scope = {
			while = {
				limit = { num_pops < 30 }
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
			check_planet_employment = yes
		}
	}
}

# replace random pops for slightly diverse empires
country_event = {
	id = twilight_imperium.7
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		# Broken Shackles pops are aware of alien life
		set_country_flag = encountered_first_primitive
		set_country_flag = first_contact_event
		set_country_flag = first_alien_life
		set_country_flag = Story1
		set_country_flag = Story2 # Already encountered spacefarers
		set_country_flag = Story3
		set_country_flag = Story4
		set_country_flag = Story5
		set_country_flag = Story6
		set_country_flag = Story7
		set_country_flag = has_encountered_other_empire


		capital_scope = {
			solar_system = {
				set_star_flag = spawn_some_multicultural_pops
			}
			while = {
				count = 9
				if = {
					limit = {
						any_country = {
							ti_valid_immigration_empire = yes
							if = {
								limit = {
									root.species = { ideal_planet_is_dry = yes }
								}
								species = { ideal_planet_is_dry = yes }
							}
							if = {
								limit = {
									root.species = { ideal_planet_is_wet = yes }
								}
								species = { ideal_planet_is_wet = yes }
							}
							if = {
								limit = {
									root.species = { ideal_planet_is_cold = yes }
								}
								species = { ideal_planet_is_cold = yes }
							}
						}
					}
					random_country = {
						limit = {
							ti_valid_immigration_empire = yes
							if = {
								limit = {
									root.species = { ideal_planet_is_dry = yes }
								}
								species = { ideal_planet_is_dry = yes }
							}
							if = {
								limit = {
									root.species = { ideal_planet_is_wet = yes }
								}
								species = { ideal_planet_is_wet = yes }
							}
							if = {
								limit = {
									root.species = { ideal_planet_is_cold = yes }
								}
								species = { ideal_planet_is_cold = yes }
							}
						}
						set_country_flag = broken_shackles_abductees_country
						set_country_flag = broken_shackles_abductees@root
						owner_species = { save_event_target_as = random_multicultural_species }
						capital_scope = {
							set_planet_flag = broken_shackles_abductees_world@root
						}
					}
					random_owned_pop = { kill_pop = yes }
					create_pop = {
						species = event_target:random_multicultural_species
						ethos = random
					}
				}
			}
			while = {
				count = 2
				if = {
					limit = {
						any_country = {
							ti_valid_immigration_empire = yes
						}
					}
					random_country = {
						limit = {
							ti_valid_immigration_empire = yes
						}
						owner_species = { save_event_target_as = random_multicultural_species }
					}
					random_owned_pop = { kill_pop = yes }
					create_pop = {
						species = event_target:random_multicultural_species
						ethos = random
					}
				}
			}
			check_planet_employment = yes
		}
	}
}

# starting planet and pop effects
planet_event = {
	id = twilight_imperium.8
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		owner = {
			every_planet_within_border = {
				limit = {
					OR = {
						is_colonizable = yes
						is_colony = yes
					}
					OR = {
						has_planet_flag = ti_city_1_starting_planet
						has_planet_flag = ti_city_2_starting_planet
						has_planet_flag = ti_city_3_starting_planet
					}
				}
				set_owner = root.owner
				set_controller = root.owner
				prevent_anomaly = yes
				if = {
					limit = { has_planet_flag = ti_city_1_starting_planet }
					while = {
						count = 2
						root = {
							random_owned_pop = {
								species = {
									save_event_target_as = random_species
								}
								kill_pop = yes 
							}
						}
						create_pop = {
							species = event_target:random_species
						}
					}
					root = {
						remove_district = district_city
					}
					add_district = district_city
				}
				if = {
					limit = { has_planet_flag = ti_city_2_starting_planet }
					set_owner = root.owner
					set_controller = root.owner
					prevent_anomaly = yes
					while = {
						count = 3
						root = {
							random_owned_pop = {
								species = {
									save_event_target_as = random_species
								}
								kill_pop = yes 
							}
						}
						create_pop = {
							species = event_target:random_species
						}
					}
					root = {
						remove_district = district_city
						remove_district = district_city
					}
					add_district = district_city
					add_district = district_city
				}
				if = {
					limit = { has_planet_flag = ti_city_3_starting_planet }
					set_owner = root.owner
					set_controller = root.owner
					prevent_anomaly = yes
					while = {
						count = 4
						root = {
							random_owned_pop = {
								species = {
									save_event_target_as = random_species
								}
								kill_pop = yes 
							}
						}
						create_pop = {
							species = event_target:random_species
						}
					}
					root = {
						remove_district = district_city
						remove_district = district_city
						remove_district = district_city
					}
					add_district = district_city
					add_district = district_city
					add_district = district_city
				}
				if = {
					limit = { has_planet_flag = ti_industrial_starting_planet }
					while = {
						count = 4
						root = {
							random_owned_pop = {
								species = {
									save_event_target_as = random_species
								}
								kill_pop = yes 
							}
						}
						create_pop = {
							species = event_target:random_species
						}
					}
					root = {
						remove_district = district_industrial
						remove_district = district_industrial
					}
					add_district = district_industrial
					add_district = district_industrial
				}
				if = {
					limit = { has_planet_flag = ti_research_starting_planet }
					while = {
						count = 2
						root = {
							random_owned_pop = {
								species = {
									save_event_target_as = random_species
								}
								kill_pop = yes 
							}
						}
						create_pop = {
							species = event_target:random_species
						}
					}
					root = {
						remove_building = building_research_lab_1
					}
					add_building = building_research_lab_1
				}
				if = {
					limit = { has_planet_flag = ti_trade_starting_planet }
					while = {
						count = 2
						root = {
							random_owned_pop = {
								species = {
									save_event_target_as = random_species
								}
								kill_pop = yes 
							}
						}
						create_pop = {
							species = event_target:random_species
						}
					}
					root = {
						remove_building = building_commercial_zone
					}
					add_building = building_commercial_zone
				}
				if = {
					limit = { has_planet_flag = ti_admin_starting_planet }
					while = {
						count = 2
						root = {
							random_owned_pop = {
								species = {
									save_event_target_as = random_species
								}
								kill_pop = yes 
							}
						}
						create_pop = {
							species = event_target:random_species
						}
					}
					root = {
						remove_building = building_bureaucratic_1
					}
					add_building = building_bureaucratic_1
				}
				if = {
					limit = { has_planet_flag = ti_generator_starting_planet }
					while = {
						count = 4
						root = {
							random_owned_pop = {
								species = {
									save_event_target_as = random_species
								}
								kill_pop = yes 
							}
						}
						create_pop = {
							species = event_target:random_species
						}
					}
					root = {
						remove_district = district_generator
						remove_district = district_generator
						remove_generator_deposits = yes
					}
					add_generator_deposits = yes
					add_district = district_generator
					add_district = district_generator
				}
				if = {
					limit = { has_planet_flag = ti_mining_starting_planet }
					while = {
						count = 4
						root = {
							random_owned_pop = {
								species = {
									save_event_target_as = random_species
								}
								kill_pop = yes 
							}
						}
						create_pop = {
							species = event_target:random_species
						}
					}
					root = {
						remove_district = district_mining
						remove_district = district_mining
						remove_mining_deposits = yes
					}
					add_mining_deposits = yes
					add_district = district_mining
					add_district = district_mining
				}
				if = {
					limit = { has_planet_flag = ti_farming_starting_planet }
					while = {
						count = 4
						root = {
							random_owned_pop = {
								species = {
									save_event_target_as = random_species
								}
								kill_pop = yes 
							}
						}
						create_pop = {
							species = event_target:random_species
						}
					}
					root = {
						remove_district = district_farming
						remove_district = district_farming
						remove_farming_deposits = yes
					}
					add_farming_deposits = yes
					add_district = district_farming
					add_district = district_farming
				}
				# add survivor trait and tomb deposits to Archon Tau
				if = {
					limit = { has_planet_flag = ti_archon_tau }
					every_owned_pop = {
						if = {
							limit = { NOT = { has_trait = trait_survivor } }
							modify_species = {
								species = this
								add_trait = trait_survivor
								add_traits_at_start_of_list = yes
							}
						}
					}
					add_deposit = d_tomb_world_ruins
					add_deposit = d_tomb_world_wasteland
				}
				# add second home to rokha
				if = {
					limit = { owner = { ti_is_naaz_rokha = yes } }
					add_modifier = { modifier = second_home days = -1 }
				}
				# add msi air freshener to nomad
				if = {
					limit = { owner = { ti_is_nomad = yes } }
					add_deposit = d_msi_air_freshener
				}
				
				check_planet_employment = yes
			}
		}
		check_planet_employment = yes
	}
}


# Change starting colonisables into barren worlds
country_event = {
	id = twilight_imperium.10
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		capital_scope.solar_system = {
			closest_system = {
				limit = { has_star_flag = neighbor_t1_first_colony }
				max_steps = 3
				random_system_planet = {
					limit = {
						is_colonizable = yes
						is_colony = no
						has_planet_flag = prescripted_ideal
					}
					change_pc = pc_barren
				}
			}
			closest_system = {
				limit = { has_star_flag = neighbor_t2_second_colony }
				max_steps = 6
				random_system_planet = {
					limit = {
						is_colonizable = yes
						is_colony = no
						has_planet_flag = prescripted_ideal
					}
					change_pc = pc_barren
				}
			}
		}
	}
}


# Change starting colonisables into terraformable barren worlds
country_event = {
	id = twilight_imperium.11
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		capital_scope.solar_system = {
			closest_system = {
				limit = { has_star_flag = neighbor_t1_first_colony }
				max_steps = 3
				random_system_planet = {
					limit = {
						is_colonizable = yes
						is_colony = no
						has_planet_flag = prescripted_ideal
					}
					change_pc = pc_barren
					add_modifier = { modifier = "terraforming_candidate" days = -1 }
				}
			}
			closest_system = {
				limit = { has_star_flag = neighbor_t2_second_colony }
				max_steps = 6
				random_system_planet = {
					limit = {
						is_colonizable = yes
						is_colony = no
						has_planet_flag = prescripted_ideal
					}
					change_pc = pc_barren
					add_modifier = { modifier = "terraforming_candidate" days = -1 }
				}
			}
		}
	}
}

# Change one starting colonisable into barren world
country_event = {
	id = twilight_imperium.12
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		capital_scope.solar_system = {
			closest_system = {
				limit = { has_star_flag = neighbor_t1_first_colony }
				max_steps = 3
				random_system_planet = {
					limit = {
						is_colonizable = yes
						is_colony = no
						has_planet_flag = prescripted_ideal
					}
					change_pc = pc_barren
				}
			}
		}
	}
}

# Set species flags
country_event = {
	id = twilight_imperium.20
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		# Set species flags
		if = {
			limit = { ti_is_arborec = yes }
			species = {
				set_species_flag = arborec_species
				save_global_event_target_as = arborec_species
			}
		}
		if = {
			limit = { ti_is_argent_flight = yes }
			species = {
				set_species_flag = argent_flight_species
				save_global_event_target_as = argent_flight_species
			}
		}
		if = {
			limit = { ti_is_creuss = yes }
			species = {
				set_species_flag = creuss_species
				save_global_event_target_as = creuss_species
			}
		}
		if = {
			limit = { ti_is_hacan = yes }
			species = {
				set_species_flag = hacan_species
				save_global_event_target_as = hacan_species
			}
		}
		if = {
			limit = { ti_is_jol_nar = yes }
			species = {
				set_species_flag = jol_nar_species
				save_global_event_target_as = jol_nar_species
			}
		}
		if = {
			limit = { ti_is_l1z1x = yes }
			species = {
				set_species_flag = l1z1x_species
				save_global_event_target_as = l1z1x_species
			}
		}
		if = {
			limit = { ti_is_letnev = yes }
			species = {
				set_species_flag = letnev_species
				save_global_event_target_as = letnev_species
			}
		}
		if = {
			limit = { ti_is_mahact = yes }
			species = {
				set_species_flag = mahact_species
				save_global_event_target_as = mahact_species
			}
		}
		if = {
			limit = { ti_is_mentak = yes }
			species = {
				set_species_flag = mentak_species
				save_global_event_target_as = mentak_species
			}
		}
		if = {
			limit = { ti_is_muaat = yes }
			species = {
				set_species_flag = muaat_species
				save_global_event_target_as = muaat_species
			}
		}
		if = {
			limit = { ti_is_naaz_rokha = yes }
			species = {
				set_species_flag = naaz_species
				save_global_event_target_as = naaz_species
			}
		}
		if = {
			limit = { ti_is_naaz_rokha = yes }
			random_galaxy_species = {
				limit = {
					has_species_flag = syncretic_species@prev
				}
				set_species_flag = rokha_species
				save_global_event_target_as = rokha_species
			}
		}
		if = {
			limit = { ti_is_naalu = yes }
			species = {
				set_species_flag = naalu_species
				save_global_event_target_as = naalu_species
			}
		}
		if = {
			limit = { ti_is_nekro = yes }
			species = {
				set_species_flag = nekro_species
				save_global_event_target_as = nekro_species
			}
		}
		if = {
			limit = { ti_is_nomad = yes }
			species = {
				set_species_flag = nomad_species
				save_global_event_target_as = nomad_species
			}
		}
		if = {
			limit = { ti_is_saar = yes }
			species = {
				set_species_flag = saar_species
				save_global_event_target_as = saar_species
			}
		}
		if = {
			limit = { ti_is_sardakk = yes }
			species = {
				set_species_flag = sardakk_species
				save_global_event_target_as = sardakk_species
			}
		}
		if = {
			limit = { ti_is_sol = yes }
			species = {
				set_species_flag = sol_species
				save_global_event_target_as = sol_species
			}
		}
		if = {
			limit = { ti_is_titans = yes }
			species = {
				set_species_flag = titans_species
				save_global_event_target_as = titans_species
			}
		}
		if = {
			limit = { ti_is_winnu = yes }
			species = {
				set_species_flag = winnu_species
				save_global_event_target_as = winnu_species
			}
		}
		if = {
			limit = { ti_is_xxcha = yes }
			species = {
				set_species_flag = xxcha_species
				save_global_event_target_as = xxcha_species
			}
		}
		if = {
			limit = { ti_is_yin = yes }
			species = {
				set_species_flag = yin_species
				save_global_event_target_as = yin_species
			}
		}
		if = {
			limit = { ti_is_yssaril = yes }
			species = {
				set_species_flag = yssaril_species
				save_global_event_target_as = yssaril_species
			}
		}
	}
}